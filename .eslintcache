[{"D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\index.js":"1","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\store.js":"2","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\App.js":"3","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\reducers\\cartReducers.js":"4","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\reducers\\orderReducers.js":"5","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\reducers\\productReducers.js":"6","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\reducers\\userReducers.js":"7","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\layout\\Header.js":"8","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\cart\\Cart.js":"9","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\layout\\Footer.js":"10","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\cart\\OrderSuccess.js":"11","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\Home.js":"12","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\cart\\ConfirmOrder.js":"13","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\product\\ProductDetails.js":"14","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\cart\\Shipping.js":"15","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\cart\\Payment.js":"16","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\user\\Login.js":"17","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\order\\ListOrders.js":"18","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\order\\OrderDetails.js":"19","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\user\\UpdateProfile.js":"20","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\user\\Register.js":"21","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\user\\UpdatePassword.js":"22","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\user\\Profile.js":"23","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\user\\NewPassword.js":"24","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\user\\ForgotPassword.js":"25","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\admin\\NewProduct.js":"26","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\admin\\Dashboard.js":"27","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\admin\\ProductsList.js":"28","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\admin\\OrdersList.js":"29","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\admin\\UpdateProduct.js":"30","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\admin\\ProcessOrder.js":"31","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\admin\\UsersList.js":"32","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\admin\\UpdateUser.js":"33","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\admin\\ProductReviews.js":"34","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\actions\\userActions.js":"35","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\route\\ProtectedRoute.js":"36","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\layout\\MetaData.js":"37","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\actions\\cartActions.js":"38","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\layout\\Loader.js":"39","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\layout\\Search.js":"40","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\product\\Product.js":"41","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\actions\\productActions.js":"42","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\cart\\CheckoutSteps.js":"43","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\admin\\Sidebar.js":"44","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\actions\\orderActions.js":"45","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\constants\\cartConstants.js":"46","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\constants\\userConstants.js":"47","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\constants\\productConstants.js":"48","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\constants\\orderConstants.js":"49","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\review\\ListReviews.js":"50"},{"size":589,"mtime":1629025694040,"results":"51","hashOfConfig":"52"},{"size":1734,"mtime":1629025694070,"results":"53","hashOfConfig":"52"},{"size":4832,"mtime":1641757504314,"results":"54","hashOfConfig":"52"},{"size":1092,"mtime":1629025695174,"results":"55","hashOfConfig":"52"},{"size":4375,"mtime":1629025695190,"results":"56","hashOfConfig":"52"},{"size":6961,"mtime":1641762133839,"results":"57","hashOfConfig":"52"},{"size":6373,"mtime":1641761802757,"results":"58","hashOfConfig":"52"},{"size":3360,"mtime":1641834253273,"results":"59","hashOfConfig":"52"},{"size":4520,"mtime":1641661227523,"results":"60","hashOfConfig":"52"},{"size":344,"mtime":1629025694641,"results":"61","hashOfConfig":"52"},{"size":732,"mtime":1629025694564,"results":"62","hashOfConfig":"52"},{"size":9166,"mtime":1642527017710,"results":"63","hashOfConfig":"52"},{"size":3736,"mtime":1641796697530,"results":"64","hashOfConfig":"52"},{"size":10028,"mtime":1641664999529,"results":"65","hashOfConfig":"52"},{"size":4762,"mtime":1629025694612,"results":"66","hashOfConfig":"52"},{"size":4612,"mtime":1629025694588,"results":"67","hashOfConfig":"52"},{"size":2539,"mtime":1641919731749,"results":"68","hashOfConfig":"52"},{"size":2710,"mtime":1629025694757,"results":"69","hashOfConfig":"52"},{"size":3770,"mtime":1629025694781,"results":"70","hashOfConfig":"52"},{"size":5114,"mtime":1641747058774,"results":"71","hashOfConfig":"52"},{"size":6842,"mtime":1641748175836,"results":"72","hashOfConfig":"52"},{"size":4326,"mtime":1641746913567,"results":"73","hashOfConfig":"52"},{"size":3486,"mtime":1641824515620,"results":"74","hashOfConfig":"52"},{"size":2924,"mtime":1629025694982,"results":"75","hashOfConfig":"52"},{"size":2198,"mtime":1629025694935,"results":"76","hashOfConfig":"52"},{"size":8197,"mtime":1629025694299,"results":"77","hashOfConfig":"52"},{"size":3898,"mtime":1641755242520,"results":"78","hashOfConfig":"52"},{"size":3575,"mtime":1641736317135,"results":"79","hashOfConfig":"52"},{"size":3830,"mtime":1641736381024,"results":"80","hashOfConfig":"52"},{"size":9264,"mtime":1629025694432,"results":"81","hashOfConfig":"52"},{"size":6270,"mtime":1641758617742,"results":"82","hashOfConfig":"52"},{"size":3543,"mtime":1641736412755,"results":"83","hashOfConfig":"52"},{"size":4587,"mtime":1629025694449,"results":"84","hashOfConfig":"52"},{"size":4042,"mtime":1629025694361,"results":"85","hashOfConfig":"52"},{"size":7627,"mtime":1642053528167,"results":"86","hashOfConfig":"52"},{"size":920,"mtime":1629025694905,"results":"87","hashOfConfig":"52"},{"size":229,"mtime":1629025694712,"results":"88","hashOfConfig":"52"},{"size":1141,"mtime":1629025694100,"results":"89","hashOfConfig":"52"},{"size":134,"mtime":1629025694688,"results":"90","hashOfConfig":"52"},{"size":773,"mtime":1641566346923,"results":"91","hashOfConfig":"52"},{"size":1249,"mtime":1641536515550,"results":"92","hashOfConfig":"52"},{"size":5936,"mtime":1629025694161,"results":"93","hashOfConfig":"52"},{"size":1844,"mtime":1629025694518,"results":"94","hashOfConfig":"52"},{"size":875,"mtime":1641714277682,"results":"95","hashOfConfig":"52"},{"size":3664,"mtime":1641793570699,"results":"96","hashOfConfig":"52"},{"size":190,"mtime":1629025695085,"results":"97","hashOfConfig":"52"},{"size":2213,"mtime":1629025695151,"results":"98","hashOfConfig":"52"},{"size":1905,"mtime":1629025695130,"results":"99","hashOfConfig":"52"},{"size":1160,"mtime":1629025695108,"results":"100","hashOfConfig":"52"},{"size":714,"mtime":1629025694876,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"mb2ckh",{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"104"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"104"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"104"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"104"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"104"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"104"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"104"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"104"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"104"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},"D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\index.js",[],["212","213"],"D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\store.js",[],"D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\App.js",[],"D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\reducers\\cartReducers.js",[],"D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\reducers\\orderReducers.js",[],"D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\reducers\\productReducers.js",[],"D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\reducers\\userReducers.js",[],"D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\layout\\Header.js",["214","215"],"import React, { Fragment } from 'react'\nimport { Route, Link } from 'react-router-dom'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useAlert } from 'react-alert'\nimport { logout } from '../../actions/userActions'\n\nimport Search from './Search'\n\nimport '../../App.css'\n\nconst Header = () => {\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { user, loading } = useSelector(state => state.auth)\n    const { cartItems } = useSelector(state => state.cart)\n\n    const logoutHandler = () => {\n        dispatch(logout());\n        alert.success('Logged out successfully.')\n    }\n\n    return (\n        <Fragment>\n            <nav className=\"navbar row\">\n                <div className=\"col-12 col-md-3\">\n                    <div className=\"navbar-brand\">\n                        <Link to=\"/\">\n                            <img src=\"/images/shopit_logo.png\" />\n                        </Link>\n                    </div>\n                </div>\n\n                <div className=\"col-12 col-md-6 mt-2 mt-md-0\">\n                    <Route render={({ history }) => <Search history={history} />} />\n                </div>\n\n                <div className=\"col-12 col-md-3 mt-4 mt-md-0 text-center\">\n                    {/* <Link to=\"/cart\" style={{ textDecoration: 'none' }} >\n                        <span id=\"cart\" className=\"ml-3\">Cart</span>\n                        <span className=\"ml-1\" id=\"cart_count\">{cartItems.length}</span>\n                    </Link> */}\n                    <Link className=\"cart-btn\" to=\"/cart\">Cart <i class=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i></Link>\n                    {user ? (\n                        <div className=\"ml-4 dropdown d-inline\">\n                            <Link to=\"#!\" className=\"btn dropdown-toggle text-white mr-4\" type=\"button\" id=\"dropDownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n\n                                <figure className=\"avatar avatar-nav\">\n                                    <img\n                                        src={user.avatar && user.avatar.url}\n                                        alt={user && user.name}\n                                        className=\"rounded-circle\"\n                                    />\n                                </figure>\n                                <span>{user && user.name}</span>\n                            </Link>\n\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropDownMenuButton\">\n\n                                {user && user.role === 'admin' && (\n                                    <Link className=\"dropdown-item\" to=\"/dashboard\">Dashboard</Link>\n                                )}\n                                <Link className=\"dropdown-item\" to=\"/orders/me\">Orders</Link>\n                                <Link className=\"dropdown-item\" to=\"/me\">Profile</Link>\n                                <Link className=\"dropdown-item text-danger\" to=\"/\" onClick={logoutHandler}>\n                                    Logout\n                                </Link>\n\n                            </div>\n\n\n                        </div>\n\n                    ) : !loading && <Link to=\"/login\" className=\"btn ml-4\" id=\"login_btn\">Login</Link>}\n\n\n                </div>\n            </nav>\n        </Fragment>\n    )\n}\n\nexport default Header\n","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\cart\\Cart.js",["216"],"import React, { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { addItemToCart, removeItemFromCart } from '../../actions/cartActions'\n\nconst Cart = ({ history }) => {\n\n    const dispatch = useDispatch();\n\n    const { cartItems } = useSelector(state => state.cart)\n\n    const removeCartItemHandler = (id) => {\n        dispatch(removeItemFromCart(id))\n    }\n\n    const increaseQty = (id, quantity, stock) => {\n        const newQty = quantity + 1;\n\n        if (newQty > stock) return;\n\n        dispatch(addItemToCart(id, newQty))\n    }\n\n    const decreaseQty = (id, quantity) => {\n\n        const newQty = quantity - 1;\n\n        if (newQty <= 0) return;\n\n        dispatch(addItemToCart(id, newQty))\n\n    }\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping')\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Your Cart'} />\n            {cartItems.length === 0 ? <h2 className=\"mt-5\">Your Cart is Empty</h2> : (\n                <Fragment>\n                    <h2 className=\"mt-5\">Items in my cart</h2>\n\n                    <div className=\"row d-flex justify-content-between\">\n                        <div className=\"col-12 col-lg-8\">\n\n                            {cartItems.map(item => (\n                                <Fragment>\n                                    {/* <hr /> */}\n\n                                    <div className=\"cart-item\" key={item.product}>\n                                        <div className=\"cart-details\">\n                                            <div className=\"cart-img\">\n                                                <img src={item.image} alt=\"Laptop\" height=\"110\" width=\"115\" />\n                                            </div>\n                                            <div className=\"cart-product-name\">\n                                                <Link to={`/products/${item.product}`}>{item.name}</Link>\n                                            </div>\n\n\n                                            <div className=\"\">\n                                                <p id=\"card_item_price\">${item.price}</p>\n                                            </div>\n\n                                            <div className=\"\">\n                                                <div className=\"stockCounter d-inline\">\n                                                    <span className=\"btn btn-danger minus\" onClick={() => decreaseQty(item.product, item.quantity)}>-</span>\n\n                                                    <input type=\"number\" className=\"form-control count d-inline\" value={item.quantity} readOnly />\n\n                                                    <span className=\"btn btn-primary plus\" onClick={() => increaseQty(item.product, item.quantity, item.stock)}>+</span>\n                                                </div>\n                                            </div>\n\n                                            <div className=\"\">\n                                                <i id=\"delete_cart_item\" className=\"fa fa-trash btn btn-danger\" onClick={() => removeCartItemHandler(item.product)} ></i>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <hr />\n                                </Fragment>\n                            ))}\n\n                        </div>\n\n                        <div className=\"col-12 col-lg-3 my-4\">\n                            <div id=\"order_summary\">\n                                <h4>Order Summary</h4>\n                                <hr />\n                                <p>Subtotal:  <span className=\"order-summary-values\">{cartItems.reduce((acc, item) => (acc + Number(item.quantity)), 0)} (Units)</span></p>\n                                <p>Est. total: <span className=\"order-summary-values\">${cartItems.reduce((acc, item) => acc + item.quantity * item.price, 0).toFixed(2)}</span></p>\n\n                                <hr />\n                                <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={checkoutHandler}>Proceed to checkout</button>\n                            </div>\n                        </div>\n                    </div>\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nexport default Cart\n","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\layout\\Footer.js",[],"D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\cart\\OrderSuccess.js",[],"D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\Home.js",["217","218"],"D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\cart\\ConfirmOrder.js",[],"D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\product\\ProductDetails.js",[],"D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\cart\\Shipping.js",[],"D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\cart\\Payment.js",[],"D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\user\\Login.js",["219"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Loader from \"../layout/Loader\";\nimport MetaData from \"../layout/MetaData\";\n\nimport { useAlert } from \"react-alert\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, clearErrors } from \"../../actions/userActions\";\n\nconst Login = ({ history, location }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n\n  const { isAuthenticated, error, loading } = useSelector(\n    (state) => state.auth\n  );\n\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      history.push(redirect);\n    }\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n  }, [dispatch, alert, isAuthenticated, error, history]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(login(email, password));\n  };\n\n  return (\n    <Fragment>\n      {loading ? (\n        <Loader />\n      ) : (\n        <Fragment>\n          <MetaData title={\"Login\"} />\n\n          <form className=\"shadow-lg\" onSubmit={submitHandler}>\n            <div className=\"test\">\n              <section class=\"login-panel\">\n                <div class=\"left-side\"><i class=\"fa fa-user-circle fa-5x\" aria-hidden=\"true\"></i></div>\n                <div class=\"right-side\">\n                  <h1>Login</h1>\n                  <input\n                    type=\"email\"\n                    name=\"\"\n                    id=\"\"\n                    placeholder=\"Email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                  <input\n                    type=\"password\"\n                    name=\"\"\n                    id=\"\"\n                    placeholder=\"Password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"let's go\"\n                    class=\"submit-btn\"\n                    disabled={loading ? true : false}\n                  />\n                  <Link to=\"/register\" className=\"float-right mt-3\">\n                    New User?\n                  </Link>\n                </div>\n              </section>\n            </div>\n          </form>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Login;\n","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\order\\ListOrders.js",[],"D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\order\\OrderDetails.js",[],"D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\user\\UpdateProfile.js",["220","221"],"import React, { Fragment, useState, useEffect } from 'react';\n\nimport MetaData from '../layout/MetaData';\n\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  updateProfile,\n  loadUser,\n  clearErrors,\n} from '../../actions/userActions';\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants';\n\nconst UpdateProfile = ({ history }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [avatar, setAvatar] = useState('');\n  const [avatarPreview, setAvatarPreview] = useState(\n    '/images/default_avatar.jpg'\n  );\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n\n  const { user } = useSelector((state) => state.auth);\n  const { error, isUpdated, loading } = useSelector((state) => state.user);\n\n  useEffect(() => {\n    if (user) {\n      setName(user.name);\n      setEmail(user.email);\n      setAvatarPreview(user.avatar.url);\n    }\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (isUpdated) {\n      alert.success('User updated successfully');\n      dispatch(loadUser());\n\n      history.push('/me');\n\n      dispatch({\n        type: UPDATE_PROFILE_RESET,\n      });\n    }\n  }, [dispatch, alert, error, history, isUpdated]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.set('name', name);\n    formData.set('email', email);\n    formData.set('avatar', avatar);\n\n    dispatch(updateProfile(formData));\n  };\n\n  const onChange = (e) => {\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      if (reader.readyState === 2) {\n        setAvatarPreview(reader.result);\n        setAvatar(reader.result);\n      }\n    };\n\n    reader.readAsDataURL(e.target.files[0]);\n  };\n  return (\n    <Fragment>\n      <MetaData title={'Update Profile'} />\n\n      {/* <div className='row wrapper'>\n        <div className='col-10 col-lg-5'>\n          <form\n            className='shadow-lg'\n            onSubmit={submitHandler}\n            encType='multipart/form-data'\n          >\n            <h1 className='mt-2 mb-5'>Update Profile</h1>\n\n            <div className='form-group'>\n              <label htmlFor='email_field'>Name</label>\n              <input\n                type='name'\n                id='name_field'\n                className='form-control'\n                name='name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </div>\n\n            <div className='form-group'>\n              <label htmlFor='email_field'>Email</label>\n              <input\n                type='email'\n                id='email_field'\n                className='form-control'\n                name='email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </div>\n\n            <div className='form-group'>\n              <label htmlFor='avatar_upload'>Avatar</label>\n              <div className='d-flex align-items-center'>\n                <div>\n                  <figure className='avatar mr-3 item-rtl'>\n                    <img\n                      src={avatarPreview}\n                      className='rounded-circle'\n                      alt='Avatar Preview'\n                    />\n                  </figure>\n                </div>\n                <div className='custom-file'>\n                  <input\n                    type='file'\n                    name='avatar'\n                    className='custom-file-input'\n                    id='customFile'\n                    accept='image/*'\n                    onChange={onChange}\n                  />\n                  <label className='custom-file-label' htmlFor='customFile'>\n                    Choose Avatar\n                  </label>\n                </div>\n              </div>\n            </div>\n\n            <button\n              type='submit'\n              className='btn update-btn btn-block mt-4 mb-3'\n              disabled={loading ? true : false}\n            >\n              Update\n            </button>\n          </form>\n        </div>\n      </div> */}\n\n<form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\n      <div className=\"test\">\n        <section class=\"login-panel\">\n          <div class=\"left-side\"></div>\n          <div class=\"right-side\">\n            <h2>Update Profile</h2>\n            <input\n              type=\"text\"\n              name=\"\"\n              id=\"\"\n              placeholder=\"Name\"\n              onChange={onChange}\n              value={name}\n            />\n            <input\n              type=\"email\"\n              name=\"\"\n              id=\"\"\n              placeholder=\"Email\"\n              onChange={onChange}\n              value={email}\n            />\n            <input\n              type=\"submit\"\n              value=\"let's go\"\n              class=\"submit-btn\"\n              disabled={loading ? true : false}\n            />\n          </div>\n        </section>\n      </div>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default UpdateProfile;\n","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\user\\Register.js",["222"],"import React, { Fragment, useState, useEffect } from \"react\";\n\nimport MetaData from \"../layout/MetaData\";\n\nimport { useAlert } from \"react-alert\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { register, clearErrors } from \"../../actions/userActions\";\n\nconst Register = ({ history }) => {\n  const [user, setUser] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const { name, email, password } = user;\n\n  const [avatar, setAvatar] = useState(\"\");\n  const [avatarPreview, setAvatarPreview] = useState(\n    \"/images/default_avatar.jpg\"\n  );\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n\n  const { isAuthenticated, error, loading } = useSelector(\n    (state) => state.auth\n  );\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      history.push(\"/\");\n    }\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n  }, [dispatch, alert, isAuthenticated, error, history]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.set(\"name\", name);\n    formData.set(\"email\", email);\n    formData.set(\"password\", password);\n    formData.set(\"avatar\", avatar);\n\n    dispatch(register(formData));\n  };\n\n  const onChange = (e) => {\n    if (e.target.name === \"avatar\") {\n      const reader = new FileReader();\n\n      reader.onload = () => {\n        if (reader.readyState === 2) {\n          setAvatarPreview(reader.result);\n          setAvatar(reader.result);\n        }\n      };\n\n      reader.readAsDataURL(e.target.files[0]);\n    } else {\n      setUser({ ...user, [e.target.name]: e.target.value });\n    }\n  };\n\n  return (\n    <Fragment>\n      <MetaData title={\"Register User\"} />\n\n      {/* <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\n                        <h1 className=\"mb-3\">Register</h1>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Name</label>\n                            <input\n                                type=\"name\"\n                                id=\"name_field\"\n                                className=\"form-control\"\n                                name='name'\n                                value={name}\n                                onChange={onChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Email</label>\n                            <input\n                                type=\"email\"\n                                id=\"email_field\"\n                                className=\"form-control\"\n                                name='email'\n                                value={email}\n                                onChange={onChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password_field\">Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"password_field\"\n                                className=\"form-control\"\n                                name='password'\n                                value={password}\n                                onChange={onChange}\n                            />\n                        </div>\n\n                        <div className='form-group'>\n                            <label htmlFor='avatar_upload'>Avatar</label>\n                            <div className='d-flex align-items-center'>\n                                <div>\n                                    <figure className='avatar mr-3 item-rtl'>\n                                        <img\n                                            src={avatarPreview}\n                                            className='rounded-circle'\n                                            alt='Avatar Preview'\n                                        />\n                                    </figure>\n                                </div>\n                                <div className='custom-file'>\n                                    <input\n                                        type='file'\n                                        name='avatar'\n                                        className='custom-file-input'\n                                        id='customFile'\n                                        accept=\"iamges/*\"\n                                        onChange={onChange}\n                                    />\n                                    <label className='custom-file-label' htmlFor='customFile'>\n                                        Choose Avatar\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n\n                        <button\n                            id=\"register_button\"\n                            type=\"submit\"\n                            className=\"btn btn-block py-3\"\n                            disabled={loading ? true : false}\n                        >\n                            REGISTER\n                        </button>\n                    </form>\n                </div>\n            </div> */}\n      <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\n      <div className=\"test\">\n        <section class=\"login-panel\">\n          <div class=\"left-side\"><i class=\"fa fa-user-circle fa-5x\" aria-hidden=\"true\"></i></div>\n          <div class=\"right-side\">\n            <h1>Sign Up</h1>\n            <input\n              type=\"text\"\n              name=\"\"\n              id=\"\"\n              placeholder=\"Name\"\n              onChange={onChange}\n              value={name}\n            />\n            <input\n              type=\"email\"\n              name=\"\"\n              id=\"\"\n              placeholder=\"Email\"\n              onChange={onChange}\n              value={email}\n            />\n            <input\n              type=\"password\"\n              name=\"\"\n              id=\"\"\n              placeholder=\"Password\"\n              onChange={onChange}\n              value={password}\n            />\n            <input\n              type=\"password\"\n              name=\"\"\n              id=\"\"\n              placeholder=\"Password-confirm\"\n              onChange={onChange}\n              value={password}\n            />\n            <input\n              type=\"submit\"\n              value=\"let's go\"\n              class=\"submit-btn\"\n              disabled={loading ? true : false}\n            />\n          </div>\n        </section>\n      </div>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default Register;\n","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\user\\UpdatePassword.js",["223","224"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { Link } from \"react-router-dom\";\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updatePassword, clearErrors } from '../../actions/userActions'\nimport { UPDATE_PASSWORD_RESET } from '../../constants/userConstants'\n\nconst UpdatePassword = ({ history }) => {\n\n    const [oldPassword, setOldPassword] = useState('')\n    const [password, setPassword] = useState('')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, isUpdated, loading } = useSelector(state => state.user)\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if (isUpdated) {\n            alert.success('Password updated successfully')\n\n            history.push('/me')\n\n            dispatch({\n                type: UPDATE_PASSWORD_RESET\n            })\n        }\n\n    }, [dispatch, alert, error, history, isUpdated])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('oldPassword', oldPassword);\n        formData.set('password', password);\n\n        dispatch(updatePassword(formData))\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Change Password'} />\n\n            {/* <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                        <h1 className=\"mt-2 mb-5\">Update Password</h1>\n                        <div className=\"form-group\">\n                            <label for=\"old_password_field\">Old Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"old_password_field\"\n                                className=\"form-control\"\n                                value={oldPassword}\n                                onChange={(e) => setOldPassword(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label for=\"new_password_field\">New Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"new_password_field\"\n                                className=\"form-control\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            />\n                        </div>\n\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" disabled={loading ? true : false} >Update Password</button>\n                    </form>\n                </div>\n            </div> */}\n\n<form className=\"shadow-lg\" onSubmit={submitHandler}>\n          <div className=\"test\">\n            <section class=\"login-panel\">\n              <div class=\"left-side\"></div>\n              <div class=\"right-side\">\n                <h2>Update Password</h2>\n                <input\n                  type=\"password\"\n                  name=\"\"\n                  id=\"\"\n                  placeholder=\"Old Password\"\n                //   value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n                <input\n                  type=\"password\"\n                  name=\"\"\n                  id=\"\"\n                  placeholder=\"New Password\"\n                //   value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n                <input\n                  type=\"password\"\n                  name=\"\"\n                  id=\"\"\n                  placeholder=\"Confirm New Password\"\n                //   value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n                <input\n                  type=\"submit\"\n                  value=\"Submit\"\n                  class=\"submit-btn\"\n                  disabled={loading ? true : false}\n                />\n              </div>\n            </section>\n          </div>\n          </form>\n\n        </Fragment>\n    )\n}\n\nexport default UpdatePassword\n","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\user\\Profile.js",[],"D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\user\\NewPassword.js",[],"D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\user\\ForgotPassword.js",[],"D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\admin\\NewProduct.js",[],"D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\admin\\Dashboard.js",[],"D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\admin\\ProductsList.js",[],"D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\admin\\OrdersList.js",[],"D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\admin\\UpdateProduct.js",[],"D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\admin\\ProcessOrder.js",[],"D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\admin\\UsersList.js",[],"D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\admin\\UpdateUser.js",[],"D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\admin\\ProductReviews.js",["225"],"import React, { Fragment, useState, useEffect } from 'react';\nimport { MDBDataTable } from 'mdbreact';\n\nimport MetaData from '../layout/MetaData';\nimport Loader from '../layout/Loader';\nimport Sidebar from './Sidebar';\n\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getProductReviews,\n  deleteReview,\n  clearErrors,\n} from '../../actions/productActions';\nimport { DELETE_REVIEW_RESET } from '../../constants/productConstants';\n\nconst ProductReviews = () => {\n  const [productId, setProductId] = useState('');\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n\n  const { error, reviews } = useSelector((state) => state.productReviews);\n  const { isDeleted, error: deleteError } = useSelector(\n    (state) => state.review\n  );\n\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (deleteError) {\n      alert.error(deleteError);\n      dispatch(clearErrors());\n    }\n\n    if (productId !== '') {\n      dispatch(getProductReviews(productId));\n    }\n\n    if (isDeleted) {\n      alert.success('Review deleted successfully');\n      dispatch({ type: DELETE_REVIEW_RESET });\n    }\n  }, [dispatch, alert, error, productId, isDeleted, deleteError]);\n\n  const deleteReviewHandler = (id) => {\n    dispatch(deleteReview(id, productId));\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(getProductReviews(productId));\n  };\n\n  const setReviews = () => {\n    const data = {\n      columns: [\n        {\n          label: 'Review ID',\n          field: 'id',\n          sort: 'asc',\n        },\n        {\n          label: 'Rating',\n          field: 'rating',\n          sort: 'asc',\n        },\n        {\n          label: 'Comment',\n          field: 'comment',\n          sort: 'asc',\n        },\n        {\n          label: 'User',\n          field: 'user',\n          sort: 'asc',\n        },\n        {\n          label: 'Actions',\n          field: 'actions',\n        },\n      ],\n      rows: [],\n    };\n\n    reviews.forEach((review) => {\n      data.rows.push({\n        id: review._id,\n        rating: review.rating,\n        comment: review.comment,\n        user: review.name,\n\n        actions: (\n          <button\n            className='btn btn-danger py-1 px-2 ml-2'\n            onClick={() => deleteReviewHandler(review._id)}\n          >\n            <i className='fa fa-trash'></i>\n          </button>\n        ),\n      });\n    });\n\n    return data;\n  };\n\n  return (\n    <Fragment>\n      <MetaData title={'Product Reviews'} />\n      <div className='row'>\n        <div className='col-12 col-md-2'>\n          <Sidebar />\n        </div>\n\n        <div className='col-12 col-md-10'>\n          <Fragment>\n            <div className='row justify-content-center mt-5'>\n              <div className='col-5'>\n                <form onSubmit={submitHandler}>\n                  <div className='form-group'>\n                    <label htmlFor='productId_field'>Enter Product ID</label>\n                    <input\n                      type='text'\n                      id='productId_field'\n                      className='form-control'\n                      value={productId}\n                      onChange={(e) => setProductId(e.target.value)}\n                    />\n                  </div>\n\n                  <button\n                    id='search_button'\n                    type='submit'\n                    className='btn btn-primary btn-block py-2'\n                  >\n                    SEARCH\n                  </button>\n                </form>\n              </div>\n            </div>\n\n            {reviews && reviews.length > 0 ? (\n              <MDBDataTable\n                data={setReviews()}\n                className='px-3'\n                bordered\n                striped\n                hover\n              />\n            ) : (\n              <p className='mt-5 text-center'>No Reviews.</p>\n            )}\n          </Fragment>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ProductReviews;\n","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\actions\\userActions.js",[],"D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\route\\ProtectedRoute.js",[],"D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\layout\\MetaData.js",[],"D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\actions\\cartActions.js",[],"D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\layout\\Loader.js",[],"D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\layout\\Search.js",[],"D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\product\\Product.js",["226"],"import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Product = ({ product, col }) => {\n    return (\n        <div className={`col-sm-12 col-md-6 col-lg-${col} my-3`}>\n            <div className=\"card p-3 rounded\">\n                <img\n                    className=\"card-img-top mx-auto\"\n                    src={product.images[0].url}\n                />\n                <div className=\"card-body d-flex flex-column\">\n                    <h5 className=\"card-title\">\n                        <Link to={`/product/${product._id}`}>{product.name}</Link>\n                    </h5>\n                    <div className=\"ratings mt-auto\">\n                        <div className=\"rating-outer\">\n                            <div className=\"rating-inner\" style={{ width: `${(product.ratings / 5) * 100}%` }}></div>\n                        </div>\n                        <span id=\"no_of_reviews\">({product.numOfReviews} Reviews)</span>\n                    </div>\n                    <p className=\"card-text\">${product.price}</p>\n                    {/* <Link to={`/product/${product._id}`} id=\"view_btn\" className=\"btn btn-block\">View Details</Link> */}\n                </div>\n            </div> \n        </div>\n    )\n}\n\nexport default Product\n","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\actions\\productActions.js",["227"],"import axios from 'axios';\n\nimport {\n    ALL_PRODUCTS_REQUEST,\n    ALL_PRODUCTS_SUCCESS,\n    ALL_PRODUCTS_FAIL,\n    ADMIN_PRODUCTS_REQUEST,\n    ADMIN_PRODUCTS_SUCCESS,\n    ADMIN_PRODUCTS_FAIL,\n    NEW_PRODUCT_REQUEST,\n    NEW_PRODUCT_SUCCESS,\n    NEW_PRODUCT_FAIL,\n    DELETE_PRODUCT_REQUEST,\n    DELETE_PRODUCT_SUCCESS,\n    DELETE_PRODUCT_FAIL,\n    UPDATE_PRODUCT_REQUEST,\n    UPDATE_PRODUCT_SUCCESS,\n    UPDATE_PRODUCT_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    NEW_REVIEW_REQUEST,\n    NEW_REVIEW_SUCCESS,\n    NEW_REVIEW_FAIL,\n    GET_REVIEWS_REQUEST,\n    GET_REVIEWS_SUCCESS,\n    GET_REVIEWS_FAIL,\n    DELETE_REVIEW_REQUEST,\n    DELETE_REVIEW_SUCCESS,\n    DELETE_REVIEW_RESET,\n    DELETE_REVIEW_FAIL,\n    CLEAR_ERRORS\n\n} from '../constants/productConstants'\n\nexport const getProducts = (keyword = '', currentPage = 1, price, category, rating = 0) => async (dispatch) => {\n    try {\n\n        dispatch({ type: ALL_PRODUCTS_REQUEST })\n\n        let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}`\n\n        if (category) {\n            link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}&ratings[gte]=${rating}`\n        }\n\n        const { data } = await axios.get(link)\n\n        dispatch({\n            type: ALL_PRODUCTS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ALL_PRODUCTS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const newProduct = (productData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_PRODUCT_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(`/api/v1/admin/product/new`, productData, config)\n\n        dispatch({\n            type: NEW_PRODUCT_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Delete product (Admin)\nexport const deleteProduct = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_PRODUCT_REQUEST })\n\n        const { data } = await axios.delete(`/api/v1/admin/product/${id}`)\n\n        dispatch({\n            type: DELETE_PRODUCT_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Update Product (ADMIN)\nexport const updateProduct = (id, productData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_PRODUCT_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/admin/product/${id}`, productData, config)\n\n        dispatch({\n            type: UPDATE_PRODUCT_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const getProductDetails = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/product/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data.product\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const newReview = (reviewData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_REVIEW_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/review`, reviewData, config)\n\n        dispatch({\n            type: NEW_REVIEW_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_REVIEW_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\nexport const getAdminProducts = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: ADMIN_PRODUCTS_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/admin/products`)\n\n        dispatch({\n            type: ADMIN_PRODUCTS_SUCCESS,\n            payload: data.products\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: ADMIN_PRODUCTS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Get product reviews\nexport const getProductReviews = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: GET_REVIEWS_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/reviews?id=${id}`)\n\n        dispatch({\n            type: GET_REVIEWS_SUCCESS,\n            payload: data.reviews\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: GET_REVIEWS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Delete product review\nexport const deleteReview = (id, productId) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_REVIEW_REQUEST })\n\n        const { data } = await axios.delete(`/api/v1/reviews?id=${id}&productId=${productId}`)\n\n        dispatch({\n            type: DELETE_REVIEW_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n\n        console.log(error.response);\n\n        dispatch({\n            type: DELETE_REVIEW_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Clear Errors\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    })\n}","D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\cart\\CheckoutSteps.js",[],"D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\admin\\Sidebar.js",[],"D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\actions\\orderActions.js",[],"D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\constants\\cartConstants.js",[],"D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\constants\\userConstants.js",[],"D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\constants\\productConstants.js",[],"D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\constants\\orderConstants.js",[],"D:\\Coding\\React\\mern-ecommerce-master-Copy\\mern-ecommerce-master\\frontend\\src\\components\\review\\ListReviews.js",[],{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","severity":1,"message":"233","line":17,"column":13,"nodeType":"234","messageId":"235","endLine":17,"endColumn":22},{"ruleId":"236","severity":1,"message":"237","line":30,"column":29,"nodeType":"238","endLine":30,"endColumn":66},{"ruleId":"232","severity":1,"message":"239","line":6,"column":10,"nodeType":"234","messageId":"235","endLine":6,"endColumn":18},{"ruleId":"232","severity":1,"message":"240","line":2,"column":10,"nodeType":"234","messageId":"235","endLine":2,"endColumn":14},{"ruleId":"236","severity":1,"message":"237","line":79,"column":21,"nodeType":"238","endLine":79,"endColumn":87},{"ruleId":"241","severity":1,"message":"242","line":33,"column":6,"nodeType":"243","endLine":33,"endColumn":56,"suggestions":"244"},{"ruleId":"232","severity":1,"message":"245","line":18,"column":10,"nodeType":"234","messageId":"235","endLine":18,"endColumn":23},{"ruleId":"241","severity":1,"message":"246","line":50,"column":6,"nodeType":"243","endLine":50,"endColumn":50,"suggestions":"247"},{"ruleId":"232","severity":1,"message":"245","line":19,"column":10,"nodeType":"234","messageId":"235","endLine":19,"endColumn":23},{"ruleId":"232","severity":1,"message":"240","line":2,"column":10,"nodeType":"234","messageId":"235","endLine":2,"endColumn":14},{"ruleId":"232","severity":1,"message":"248","line":12,"column":25,"nodeType":"234","messageId":"235","endLine":12,"endColumn":39},{"ruleId":"232","severity":1,"message":"249","line":5,"column":8,"nodeType":"234","messageId":"235","endLine":5,"endColumn":14},{"ruleId":"236","severity":1,"message":"237","line":8,"column":17,"nodeType":"238","endLine":11,"endColumn":19},{"ruleId":"232","severity":1,"message":"250","line":30,"column":5,"nodeType":"234","messageId":"235","endLine":30,"endColumn":24},"no-native-reassign",["251"],"no-negated-in-lhs",["252"],"no-unused-vars","'cartItems' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useAlert' is defined but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'redirect'. Either include it or remove the dependency array.","ArrayExpression",["253"],"'avatarPreview' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["254"],"'setOldPassword' is assigned a value but never used.","'Loader' is defined but never used.","'DELETE_REVIEW_RESET' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},"Update the dependencies array to be: [dispatch, alert, isAuthenticated, error, history, redirect]",{"range":"259","text":"260"},"Update the dependencies array to be: [dispatch, alert, error, history, isUpdated, user]",{"range":"261","text":"262"},[880,930],"[dispatch, alert, isAuthenticated, error, history, redirect]",[1239,1283],"[dispatch, alert, error, history, isUpdated, user]"]